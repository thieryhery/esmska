
function getName() {
    return "[CZ]O2 (registrace)"
}

function getVersion() {
    return "2012-01-03"
}

function getMaintainer() {
    return "Kamil Páral <kamil.paral@gmail.com>"
}

function getMinProgramVersion() {
    return "0.22"
}

function getWebsite() {
    return "http://sms.1188.cz"
}

function getDescription() {
    return "Oficiální brána O2 pro registrované uživatele. Registrace je dostupná pro každého. Zdarma odesílá zprávy do sítě O2 a nevyžaduje opsání bezpečnostního kódu."
}

function getSupportedPrefixes() {
    return ["+420"]
}

function getPreferredPrefixes() {
    return ["+420601","+420602","+420606","+420607","+420720","+420721",
            "+420722","+420723","+420724","+420725","+420726","+420727",
            "+420728","+420729"]
}

function getSMSLength() {
    return 160
}

function getMaxChars() {
    return 160
}

function getMaxParts() {
    return 5
}

function getSignatureExtraLength() {
    return 0
}

function getDelayBetweenMessages() {
    return 0
}

function getSupportedLanguages() {
    return ["cs"]
}

function getFeatures() {
    return ["LOGIN_ONLY"]
}

function send() {

    // change variables to correct form
    if (NUMBER.indexOf("+420") == 0) {
        NUMBER = NUMBER.substring(4)
    }
    
    // check that login and password supplied
    if (LOGIN.length == 0 || PASSWORD.length == 0) {
        EXEC.setProblem("WRONG_AUTH")
        return false
    }

    // start page
    content = EXEC.getURL("http://sms.1188.cz", [])

    // find if we are logged in
    logged = false
    re = /<div id="smsLogout"/
    match = re.exec(content)
    if (match) {
        logged = true
    }

    // log in if needed
    if (!logged) {
        postData = ["username", LOGIN, "password", PASSWORD]
        content = EXEC.postURL("http://sms.1188.cz/sms/login", [], postData)
        
        // check log in errors
        re = /<span class="message wrong">/
        match = re.exec(content)
        if (match) {
            // login was not successfull
            EXEC.setProblem("WRONG_AUTH")
            logout()
            return false
        }
        
        // we should be logged in now
    }
    
    // work around javascript protection
    re = /HTMLElement.prototype.y = '([\w]+)';/
    match = re.exec(content)
    y = match[1]
    
    re = new RegExp("<input type=\"hidden\" name=\"" + y + "[\\w]+\" id=\"([\\w]+)\" />","g");
    match = re.exec(content)
    hidden = match[1]

    // send message
    postData = ["receiver_phone", NUMBER, "text", MESSAGE, 
                "smsSubmit", "Odeslat SMS", hidden, "1"]
    content = EXEC.postURL("http://sms.1188.cz/sms/send", [], postData)
    
    // check for captcha
    // that happens if we're sending messages too quickly
    re = /<div class="captchaTitle">/
    match = re.exec(content)
    while (match) {
        // work around javascript protection
        re = /HTMLElement.prototype.y = '([\w]+)';/
        match = re.exec(content)
        y = match[1]    
        re = new RegExp("<input type=\"hidden\" name=\"" + y + "[\\w]+\" id=\"([\\w]+)\" />","g");
        match = re.exec(content)
        hidden = match[1]
    
        // download image
        content = EXEC.getURL("http://sms.1188.cz/captcha/show.png", [])
    
        // show image
        var code = EXEC.recognizeImage(content, "")
        
        // send code
        postData = ["receiver_phone", NUMBER, "captcha", code, 
                    "text", MESSAGE, "smsSubmit", "Odeslat SMS",
                    hidden, "1"]
        content = EXEC.postURL("http://sms.1188.cz/sms/send", [], postData)
        
        // check for captcha again
        // that happens if user provides no value at all
        match = re.exec(content)
    }

    // check if message was successfully sent
    re = /Vaši zprávu jsme přijali, bude odeslána co nejdříve./
    match = re.exec(content)
    if (match) {
        // all ok
        logout()
        return true
    }
    
    // look for possible error messages
    re = /<span class="message wrong">([\s\S]*?)<\/span>/g
    match = content.match(re)
    if (match) {
        // gateway told us what's wrong
        // the first error is usually about javascript, display the last one
        EXEC.setProblem("GATEWAY_MESSAGE", match[match.length-1])
        logout()
        return false
    }
    
    // other type of error, when no captcha code is provided
    re = /<div class="captchaTitle">([\s\S]*?)<\/div>/
    match = re.exec(content)
    if (match) {
        // gateway told us what's wrong
        EXEC.setProblem("GATEWAY_MESSAGE", match[1])
        logout()
        return false
    }

    // if neither success nor error message was found
    logout()
    return false
}

// custom function for logging out
function logout() {
    EXEC.getURL("http://sms.1188.cz/sms/logout", [])
}

